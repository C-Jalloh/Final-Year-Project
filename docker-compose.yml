services:
  # PostgreSQL Database
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: chelal_db
      POSTGRES_USER: chelal_user
      POSTGRES_PASSWORD: chelal_password
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    networks:
      - chelal-network

  # Redis for Celery
  redis:
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chelal-network

  # Django Backend
  backend:
    build:
      context: ./chelalBackend
      dockerfile: Dockerfile
    command: gunicorn Backend.wsgi:application --bind 0.0.0.0:8000 --workers 1 --threads 2 --timeout 30 --max-requests 500 --max-requests-jitter 50 --worker-class gthread --worker-tmp-dir /dev/shm
    volumes:
      - ./chelalBackend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=Backend.settings
      - DATABASE_URL=postgres://chelal_user:chelal_password@db:5432/chelal_db
      - DB_HOST=db
      - DB_NAME=chelal_db
      - DB_USER=chelal_user
      - DB_PASSWORD=chelal_password
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend,172.18.0.1
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:5173
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - chelal-network

  # Celery Worker
  celery:
    build:
      context: ./chelalBackend
      dockerfile: Dockerfile
    command: celery -A Backend worker --loglevel=info
    volumes:
      - ./chelalBackend:/app
    depends_on:
      - db
      - redis
      - backend
    environment:
      - DJANGO_SETTINGS_MODULE=Backend.settings
      - DATABASE_URL=postgres://chelal_user:chelal_password@db:5432/chelal_db
      - DATABASE_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - chelal-network

  # React Frontend
  react-frontend:
    build:
      context: ./chelal-hms-react
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://172.18.0.1:8000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://172.18.0.1:8000/api
      - NODE_ENV=development
    volumes:
      - ./chelal-hms-react:/app
      - /app/node_modules
      - /app/.next
    networks:
      - chelal-network

  # Nginx Reverse Proxy (Optional - for production routing)
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - react-frontend
    networks:
      - chelal-network

volumes:
  postgres_data:
  redis_data:

networks:
  chelal-network:
    driver: bridge
